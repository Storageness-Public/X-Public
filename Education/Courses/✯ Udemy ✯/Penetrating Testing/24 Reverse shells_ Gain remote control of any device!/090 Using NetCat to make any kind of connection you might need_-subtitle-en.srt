1
00:00:00,182 --> 00:00:04,560
No reverse shell tutorial or chapter would
be complete without mentioning Netcat.

2
00:00:06,170 --> 00:00:11,616
Now Netcat is a very nifty tool to have
on your USB stick to carry around.

3
00:00:11,616 --> 00:00:16,830
It is practically been called
a Swiss knife of reverse

4
00:00:16,830 --> 00:00:21,970
shells because it pretty much offers any
kind of connection that you might need.

5
00:00:22,980 --> 00:00:27,642
Now the problem with Netcat as with most
of the reverse shells is of course that it

6
00:00:27,642 --> 00:00:29,950
is not installed on the remote system.

7
00:00:31,810 --> 00:00:37,640
But if you need a quick code,
if you can't be bothered to generate

8
00:00:37,640 --> 00:00:42,070
something you can always download Netcat
and that is a fantastic piece of code.

9
00:00:42,070 --> 00:00:46,310
Although Netcat is a,
only creates reverse connections.

10
00:00:47,630 --> 00:00:52,230
Connects two points or
more points into one and nothing else.

11
00:00:52,230 --> 00:00:55,950
There's no, it doesn't by default

12
00:00:55,950 --> 00:01:01,050
copy into the start up folder or
anything of a kind.

13
00:01:01,050 --> 00:01:04,500
It's just a reverse shell for
the duration of the session.

14
00:01:04,500 --> 00:01:09,040
Now, not to say that you cannot actually,
you can actually copy it in

15
00:01:09,040 --> 00:01:14,069
the startup folder, write small scripts
for that, or something of a kind.

16
00:01:15,990 --> 00:01:18,820
For this,
you do need some programming experience.

17
00:01:18,820 --> 00:01:25,350
This is a, we're already one foot into
programming a way into programming.

18
00:01:25,350 --> 00:01:27,820
However, you don't
actually need to do that.

19
00:01:27,820 --> 00:01:31,540
As I said, Netcat is simply
a nifty tool to carry around.

20
00:01:31,540 --> 00:01:33,199
You can also test connections with it.

21
00:01:34,920 --> 00:01:37,420
And you can actually
create reverse shells.

22
00:01:37,420 --> 00:01:40,185
You could even create quick chat servers,

23
00:01:40,185 --> 00:01:43,620
a quick chat service or
something of a kind.

24
00:01:43,620 --> 00:01:44,540
It's fantastic.

25
00:01:44,540 --> 00:01:48,070
You can use it for
a wide variety of purposes.

26
00:01:48,070 --> 00:01:50,000
Now let's just take a look
at Netcat's options.

27
00:01:51,270 --> 00:01:54,230
So here on Kali it's ncat.

28
00:01:54,230 --> 00:01:57,020
Somewhere it's nc.

29
00:01:57,020 --> 00:01:59,960
Somewhere it's Netcat, I don't know.

30
00:01:59,960 --> 00:02:03,610
Depends which Linux distribution you have.

31
00:02:03,610 --> 00:02:05,650
It also runs on Windows,
so keep that in mind.

32
00:02:05,650 --> 00:02:10,320
You can download the version on
more than one place on the net.

33
00:02:10,320 --> 00:02:11,430
So no worries about that.

34
00:02:12,670 --> 00:02:14,020
Ncat.

35
00:02:14,020 --> 00:02:18,700
And I'm going to show you today how you
can interconnect two Linux machines and

36
00:02:18,700 --> 00:02:25,666
how you can command one from another
with ncat, with Netcat, sorry.

37
00:02:25,666 --> 00:02:26,670
So, -- help.

38
00:02:26,670 --> 00:02:29,740
Let's have a look at what is offered here.

39
00:02:29,740 --> 00:02:30,497
Just look at these options.

40
00:02:30,497 --> 00:02:34,060
And Netcat does support SSL encryption.

41
00:02:35,910 --> 00:02:37,530
So you could have your chat encrypted.

42
00:02:37,530 --> 00:02:42,830
You could have an encrypted
communication between two points.

43
00:02:42,830 --> 00:02:46,082
It can establish
a peer-to-peer connection.

44
00:02:46,082 --> 00:02:48,230
Peer-to-peer, not connection, sorry,

45
00:02:48,230 --> 00:02:51,075
but peer-to-peer encryption,
which is very nice.

46
00:02:51,075 --> 00:02:54,492
A very nifty tool to have if you
want to keep your chat private or

47
00:02:54,492 --> 00:02:55,760
something like that.

48
00:02:55,760 --> 00:02:59,110
You can connect to multiple people and

49
00:02:59,110 --> 00:03:04,110
then you can have a discussion or
something of a kind.

50
00:03:04,110 --> 00:03:07,680
Very nice way to communicate, but
above all, It's a reverse shell.

51
00:03:07,680 --> 00:03:14,828
I can show you briefly where
you could have chat service.

52
00:03:14,828 --> 00:03:15,688
So you just type in this --cat.

53
00:03:15,688 --> 00:03:16,852
Sorry, not cat.
Chat, and

54
00:03:16,852 --> 00:03:20,160
that will start a simple Ncat chat server.

55
00:03:21,840 --> 00:03:24,764
Say if you want to keep
your conversation private,

56
00:03:24,764 --> 00:03:27,280
you can communicate through IP addresses.

57
00:03:27,280 --> 00:03:30,125
You can just,
well not through IP addresses, but

58
00:03:30,125 --> 00:03:32,971
you can just have each
other's IP addresses, and

59
00:03:32,971 --> 00:03:36,860
then you can have a very nice chat
that nobody else can eavesdrop on.

60
00:03:39,270 --> 00:03:43,783
Anyway, what we are looking today is
this function, e, which is exec command.

61
00:03:43,783 --> 00:03:44,480
Exec, not exec.

62
00:03:44,480 --> 00:03:48,497
Whatever you pronounce this.

63
00:03:48,497 --> 00:03:54,060
Basically, it executes a given
command which is very nice.

64
00:03:55,850 --> 00:03:59,266
And this one is,
well this is for bash, I think?

65
00:03:59,266 --> 00:04:00,690
Something of a kind.

66
00:04:00,690 --> 00:04:01,602
But it doesn't really matter.

67
00:04:01,602 --> 00:04:04,970
You will see soon enough that
e is pretty much efficient and

68
00:04:04,970 --> 00:04:07,020
you can use it pretty
much anywhere you want.

69
00:04:07,020 --> 00:04:11,160
Also support for
IPv6 is fantastic as well.

70
00:04:11,160 --> 00:04:17,105
As I said, you can establish pretty much
any sort of a connection between two or

71
00:04:17,105 --> 00:04:19,730
more points, which is very nice.

72
00:04:19,730 --> 00:04:23,580
Today we're going to
do a couple of things.

73
00:04:23,580 --> 00:04:25,760
So I'll just go ahead and clear this.

74
00:04:25,760 --> 00:04:29,930
Now this is my Kali machine and
I have a command somewhere here.

75
00:04:29,930 --> 00:04:32,120
So these are the commands that
we're going to be using today.

76
00:04:33,120 --> 00:04:38,270
So this is for verbose output,
this is to tell netcat to listen,

77
00:04:38,270 --> 00:04:41,210
and this is to tell it on
which port to listen, and

78
00:04:41,210 --> 00:04:45,371
then to forward pretty much anything
given to it into /bin/bash.

79
00:04:45,371 --> 00:04:47,750
Which is basically our terminal.

80
00:04:49,100 --> 00:04:51,410
Anyway, let's just go ahead and
type that in.

81
00:04:52,560 --> 00:04:54,180
I am going to change the directory here.

82
00:04:54,180 --> 00:04:56,540
Clear the screen and type in ncat.

83
00:04:58,150 --> 00:04:59,220
Give me verbose.

84
00:04:59,220 --> 00:05:00,060
Give me listen.

85
00:05:00,060 --> 00:05:00,617
And give me port.

86
00:05:00,617 --> 00:05:01,720
I don't know.

87
00:05:01,720 --> 00:05:03,960
I am going to say port 888.

88
00:05:03,960 --> 00:05:08,100
You can pretty much specify
a wide variety of ports here.

89
00:05:08,100 --> 00:05:12,505
It doesn't matter that much as long as
the port's not used by something else and

90
00:05:12,505 --> 00:05:13,980
is free.

91
00:05:13,980 --> 00:05:17,540
You can determine if
the port is actually taken

92
00:05:17,540 --> 00:05:22,640
by just doing an end map of your own
system and there you will be able

93
00:05:22,640 --> 00:05:26,270
to see without any problems if the port
is actually being used by something else.

94
00:05:27,860 --> 00:05:31,188
Anyway so we have a port,

95
00:05:31,188 --> 00:05:36,590
now we need /bin/bash, press enter.

96
00:05:36,590 --> 00:05:41,582
Okay, so now it is listening,
and you can also move these

97
00:05:41,582 --> 00:05:46,372
things into foreground,
into background actually.

98
00:05:46,372 --> 00:05:46,920
Sorry.

99
00:05:46,920 --> 00:05:49,578
There are, hold on,
let me see if I can actually do that.

100
00:05:49,578 --> 00:05:58,416
To go like this Nope, hold on.

101
00:05:58,416 --> 00:05:59,516
Give me a moment.

102
00:06:08,316 --> 00:06:09,395
Already in use.

103
00:06:09,395 --> 00:06:09,996
Quitting.

104
00:06:09,996 --> 00:06:10,496
Okay, so it is.

105
00:06:14,495 --> 00:06:16,796
Nmap localhost.

106
00:06:16,796 --> 00:06:20,170
Let's see what it is doing.

107
00:06:20,170 --> 00:06:24,530
So we got http, https, sun-answerbook.

108
00:06:24,530 --> 00:06:26,340
Okay, so it is running, no problems.

109
00:06:26,340 --> 00:06:30,070
You saw how you could put
it in the background.

110
00:06:30,070 --> 00:06:34,047
Basically, just you can add this line at
the end ampersand sign and that's it.

111
00:06:34,047 --> 00:06:37,920
Let's see if it's gonna work or not.

112
00:06:37,920 --> 00:06:39,010
Type in ifconfig.

113
00:06:39,010 --> 00:06:43,930
Okay, what is the IP address?

114
00:06:43,930 --> 00:06:45,340
Okay, 102 hasn't really changed.

115
00:06:47,080 --> 00:06:49,560
Primarily because these machines
have been running for quite a while.

116
00:06:49,560 --> 00:06:51,790
Even my physical machine,
I think it's been running for

117
00:06:51,790 --> 00:06:55,593
seven days straight, something of
that kind, not sure about that.

118
00:06:55,593 --> 00:07:00,660
I might have placed it to sleep a couple
of times but it doesn't really matter.

119
00:07:00,660 --> 00:07:02,898
Clear, and you can see my things here.

120
00:07:02,898 --> 00:07:05,437
CD clear

121
00:07:08,838 --> 00:07:14,500
Okay, so it's the same, ncat.

122
00:07:14,500 --> 00:07:21,830
And we want to type in 192.168.1.102,
port 8888.

123
00:07:25,568 --> 00:07:27,420
Okay.

124
00:07:27,420 --> 00:07:32,120
So connection from 192.168.1.101,
yep, there we go.

125
00:07:32,120 --> 00:07:38,920
So let's type something in, like ls.

126
00:07:38,920 --> 00:07:41,530
See, nothing is being typed in here, but.

127
00:07:43,520 --> 00:07:47,350
Here on the other end, on my physical
machine, I have pretty much full access.

128
00:07:47,350 --> 00:07:50,717
So if I type in clear, it's gone, but

129
00:07:50,717 --> 00:07:55,150
I still have the shell open,
if I am not mistaken.

130
00:07:55,150 --> 00:07:57,290
If I type in ls again, it is there.

131
00:07:57,290 --> 00:07:59,070
I can do cd.

132
00:07:59,070 --> 00:08:01,831
Desktop, but you can see it's crude.

133
00:08:01,831 --> 00:08:04,241
It's rudimentary.

134
00:08:04,241 --> 00:08:07,950
It doesnt really give you a lot of output.

135
00:08:09,400 --> 00:08:10,510
It's horrible to look at.

136
00:08:10,510 --> 00:08:14,911
I mean just typing in commands blindly
like this to a very large extent is a bit

137
00:08:14,911 --> 00:08:20,090
difficult and can be a bit tiring, but as
I said, this is something that you would

138
00:08:20,090 --> 00:08:25,060
use in a situation where you are forced
to use it and where you actually

139
00:08:26,890 --> 00:08:30,570
want to have some sort of
a encrypted communication or

140
00:08:30,570 --> 00:08:34,360
something of a kind with another person.

141
00:08:34,360 --> 00:08:39,310
So let's have a look at how
our communication works.

142
00:08:41,031 --> 00:08:46,571
Oops, sorry.

143
00:08:46,571 --> 00:08:55,326
6549, 549.

144
00:08:55,326 --> 00:08:59,205
I don't want that, and
I type in lsof -i :1234.

145
00:08:59,205 --> 00:09:04,395
Basically, this command that I've
just typed in, lsof -i : and

146
00:09:04,395 --> 00:09:10,695
then the port, you can do an Nmap of your
own system, see which ports are opened,

147
00:09:10,695 --> 00:09:15,979
and then once you've figured that out,
you can type in this command

148
00:09:15,979 --> 00:09:21,550
to figure out which processes
are using that particular port.

149
00:09:21,550 --> 00:09:22,050
So clear.

150
00:09:23,300 --> 00:09:27,684
So I got Bash and ncat which

151
00:09:27,684 --> 00:09:32,865
are using this, so go ahead and

152
00:09:32,865 --> 00:09:37,860
kill 6531 and 6540.

153
00:09:43,160 --> 00:09:43,660
Terminated.

154
00:09:45,900 --> 00:09:47,760
Excellent, so there is nothing now.

155
00:09:47,760 --> 00:09:53,100
Let's do nmap localhost.

156
00:09:53,100 --> 00:09:56,820
Excellent.
So that port is no longer opened.

157
00:09:56,820 --> 00:09:58,010
Please disregard the rest.

158
00:09:59,440 --> 00:10:02,710
I have a lot of boards open,
more than I should have on this machine,

159
00:10:02,710 --> 00:10:06,590
but this is a testing machine,
anyway, as it is a virtual machine.

160
00:10:07,610 --> 00:10:10,263
So, let's go ahead and
type in ncat --help.

161
00:10:10,263 --> 00:10:13,260
Well, we don't actually.

162
00:10:13,260 --> 00:10:14,081
Well, yes, we do.

163
00:10:14,081 --> 00:10:15,380
ncat --help.

164
00:10:15,380 --> 00:10:18,660
And what do we want to do?

165
00:10:18,660 --> 00:10:24,780
ncat --chat.

166
00:10:24,780 --> 00:10:25,901
No, yes, come on.

167
00:10:25,901 --> 00:10:33,021
Chat on port 1234.

168
00:10:33,021 --> 00:10:37,041
Ncat, you must specify
a host to connect to.

169
00:10:37,041 --> 00:10:41,133
Okay, -l on

170
00:10:41,133 --> 00:10:46,341
port 1234.

171
00:10:46,341 --> 00:10:48,201
There you go.

172
00:10:48,201 --> 00:10:49,022
I am connected there.

173
00:10:49,022 --> 00:10:50,221
I am listening.

174
00:10:50,221 --> 00:10:52,201
Sorry, not connected, but
rather, instead, listening.

175
00:10:52,201 --> 00:10:56,420
I'm gonna go ahead and quit this.

176
00:10:56,420 --> 00:11:01,240
Clear, and I need to, excellent.

177
00:11:01,240 --> 00:11:07,660
So if I type in hello, it pops on the, you
can see this popping on the other side.

178
00:11:07,660 --> 00:11:10,358
How are you?

179
00:11:10,358 --> 00:11:13,030
It's popping again.

180
00:11:13,030 --> 00:11:13,860
No problems.

181
00:11:15,500 --> 00:11:18,880
And if I do this and place it like here.

182
00:11:23,418 --> 00:11:24,539
Okay.

183
00:11:24,539 --> 00:11:26,039
You can see I have a lot
of stuff in the background.

184
00:11:28,757 --> 00:11:29,830
Let's put it like this.

185
00:11:31,560 --> 00:11:32,290
Just minimize it.

186
00:11:32,290 --> 00:11:34,130
It doesn't really matter.

187
00:11:34,130 --> 00:11:37,527
I am fine.

188
00:11:37,527 --> 00:11:40,108
You can see it's replying
on the other end.

189
00:11:40,108 --> 00:11:41,049
No problem.

190
00:11:41,049 --> 00:11:43,028
So there is a two-way communication.

191
00:11:43,028 --> 00:11:48,707
You just hit the keyboard here,
and it is popping, no problem.

192
00:11:48,707 --> 00:11:52,267
So you can communicate with
somebody in this fashion as well.

193
00:11:52,267 --> 00:11:55,068
Now let's go ahead and quit this.

194
00:11:55,068 --> 00:11:56,548
If I type in something here,

195
00:11:56,548 --> 00:12:00,571
no, nothing has happened because it's
being transmitted to a closed port.

196
00:12:00,571 --> 00:12:04,251
Anyway, let's see.

197
00:12:04,251 --> 00:12:09,076
Let's go --ssl.

198
00:12:09,076 --> 00:12:11,890
Is this gonna work?

199
00:12:13,869 --> 00:12:16,088
Here --ssl.

200
00:12:18,508 --> 00:12:23,189
Hey, how is it going?

201
00:12:23,189 --> 00:12:28,898
Okay, we would obviously
need to confirm this,

202
00:12:28,898 --> 00:12:35,100
whether the traffic is
actually encrypted or not.

203
00:12:35,100 --> 00:12:39,539
Yeah, we can't actually confirm it like
this because we don't have any sort of

204
00:12:39,539 --> 00:12:43,200
snooping around for traffic here,
but we can fire up Wireshark.

205
00:12:43,200 --> 00:12:48,250
Sorry, we need a,
where am I gonna do that?

206
00:12:48,250 --> 00:12:52,150
Let's see if I actually have it here.

207
00:12:52,150 --> 00:12:55,547
Information, well,
I don't need to do that.

208
00:12:55,547 --> 00:13:01,288
I can just so, Wireshark, please have it.

209
00:13:01,288 --> 00:13:03,368
Yes, it is actually installed.

210
00:13:03,368 --> 00:13:06,209
Error during loading, okay.

211
00:13:06,209 --> 00:13:07,668
Are you still gonna work?

212
00:13:07,668 --> 00:13:09,388
Yes, you will.

213
00:13:09,388 --> 00:13:10,548
Amazing.

214
00:13:10,548 --> 00:13:15,208
So go ahead and
pick your interface that you are using.

215
00:13:15,208 --> 00:13:17,248
Go ahead and start this.

216
00:13:17,248 --> 00:13:20,848
I see that there shouldn't
be a lot of things now.

217
00:13:20,848 --> 00:13:26,568
Type in ip.addr equals
192.168.1 dot something.

218
00:13:26,568 --> 00:13:31,595
That dot something will

219
00:13:31,595 --> 00:13:36,117
be the IP address of my

220
00:13:36,117 --> 00:13:41,908
Fedora physical machine.

221
00:13:41,908 --> 00:13:43,629
So let's see.

222
00:13:43,629 --> 00:13:45,710
What is the IP address there?

223
00:13:45,710 --> 00:13:46,210
ifconfig.

224
00:13:47,370 --> 00:13:51,270
I know it's small, but
you don't actually need to see this here.

225
00:13:51,270 --> 00:13:52,488
I can zoom it in if you want.

226
00:13:52,488 --> 00:13:53,009
It's 192.101, 101.

227
00:13:53,009 --> 00:13:54,168
Oh, right.

228
00:13:54,168 --> 00:14:02,568
It can't actually put it out here.

229
00:14:02,568 --> 00:14:03,568
I need a equals sign.

230
00:14:03,568 --> 00:14:05,328
How brilliant of me.

231
00:14:05,328 --> 00:14:08,828
Double equals sign.

232
00:14:08,828 --> 00:14:15,250
Hey.

233
00:14:15,250 --> 00:14:19,500
There we go.
So, we have some sort of traffic here.

234
00:14:19,500 --> 00:14:23,358
Let's see if we can make
something out of it.

235
00:14:23,358 --> 00:14:25,498
I don't know.

236
00:14:25,498 --> 00:14:28,958
Let's just send a bit more of it.

237
00:14:34,059 --> 00:14:34,639
Come on.

238
00:14:34,639 --> 00:14:36,219
Don't do this to me.
Don't do this to me.

239
00:14:37,318 --> 00:14:39,559
Excellent.

240
00:14:39,559 --> 00:14:41,919
So, here we see data, and guess what?

241
00:14:41,919 --> 00:14:42,419
It's encrypted.

242
00:14:43,950 --> 00:14:47,670
So you can't actually see anything here.

243
00:14:47,670 --> 00:14:51,562
You won't be able to decipher
the communication between two

244
00:14:51,562 --> 00:14:58,270
people or perhaps more if,
I don't know, depends how you do this.

245
00:14:58,270 --> 00:14:59,780
So let's go ahead and kill that.

246
00:15:01,060 --> 00:15:03,430
And let's go ahead on the other end.

247
00:15:03,430 --> 00:15:06,320
Go ahead and kill it.

248
00:15:06,320 --> 00:15:09,318
Start everything the same,
but without --ssl.

249
00:15:09,318 --> 00:15:09,958
I just wanna show the difference.

250
00:15:12,759 --> 00:15:17,499
And, just need to remove the --ssl.

251
00:15:19,740 --> 00:15:20,458
So lets type in something,
I dunno, doesn't matter.

252
00:15:20,458 --> 00:15:25,246
We're chatting with

253
00:15:25,246 --> 00:15:29,238
random letters.

254
00:15:29,238 --> 00:15:32,459
Okay, let's just pick the last one.

255
00:15:32,459 --> 00:15:37,920
Nope, that's not the last one.

256
00:15:37,920 --> 00:15:42,558
Okay, so it says data, Length 2.

257
00:15:42,558 --> 00:15:45,878
Can we actually find what we have sent?

258
00:15:45,878 --> 00:15:51,416
But see, it's 67 0a.

259
00:15:51,416 --> 00:15:56,824
Okay, let's just Let's think
of something meaningful that

260
00:15:56,824 --> 00:16:01,920
we can actually track which is
a far better idea than this.

261
00:16:01,920 --> 00:16:07,877
So I can actually confirm that
I have written the right stuff.

262
00:16:07,877 --> 00:16:09,054
Hello.

263
00:16:09,054 --> 00:16:12,934
How are you?

264
00:16:12,934 --> 00:16:20,094
And on the other end,
we're gonna type in, I am fine.

265
00:16:20,094 --> 00:16:27,076
What about, what about you?

266
00:16:31,355 --> 00:16:34,777
Okay, these things tend to remain
in buffers if I'm not mistaken, so

267
00:16:34,777 --> 00:16:37,335
you might have some extra
letters from time to time.

268
00:16:37,335 --> 00:16:37,835
So that can be a bit tricky.

269
00:16:39,700 --> 00:16:44,251
But oh well, learn to live with it.

270
00:16:44,251 --> 00:16:46,449
Okay, so it's not this one.

271
00:16:46,449 --> 00:16:47,628
Not this one.

272
00:16:47,628 --> 00:16:48,208
Let's see.

273
00:16:48,208 --> 00:16:52,028
There we go, it's hello.

274
00:16:52,028 --> 00:16:58,722
You can actually read through it no
problem, so you can see what it is.

275
00:17:00,190 --> 00:17:01,900
And here, that's not the one.

276
00:17:04,270 --> 00:17:07,598
Again, you can see here how are you.

277
00:17:07,598 --> 00:17:11,110
So you can see what's passing through.

278
00:17:11,110 --> 00:17:16,600
One more time, I just wanna confirm
that this is actually encrypted.

279
00:17:16,600 --> 00:17:22,899
So you can see the difference because
it looked awfully similar to me.

280
00:17:22,899 --> 00:17:30,999
I wanna see if there is
anything wrong with it.

281
00:17:30,999 --> 00:17:31,539
I don't know,
what am I gonna type in here?

282
00:17:31,539 --> 00:17:34,799
Lamp is good.

283
00:17:34,799 --> 00:17:35,459
Completely meaningless.

284
00:17:35,459 --> 00:17:43,699
Wall is random.

285
00:17:43,699 --> 00:17:45,819
I have such awesome sentences,
it's amazing.

286
00:17:47,179 --> 00:17:53,635
Okay, so
if we take a look at the last one.

287
00:17:53,635 --> 00:17:54,135
Nope.

288
00:17:55,240 --> 00:17:56,020
There we go.

289
00:17:56,020 --> 00:17:58,210
So, you can't actually read through this.

290
00:17:58,210 --> 00:18:02,310
You see, as before we had
text here that we could read.

291
00:18:02,310 --> 00:18:07,590
But now, we can't actually read anything
because of course it is encrypted and

292
00:18:07,590 --> 00:18:13,068
protected from any snooping or
anything of a kind, which is great.

293
00:18:13,068 --> 00:18:15,886
Is there anything?

294
00:18:15,886 --> 00:18:18,670
U, G, something.

295
00:18:18,670 --> 00:18:21,060
I don't think that there is
anything meaningful in here.

296
00:18:22,320 --> 00:18:28,480
Anyway, as you have seen, you can use
this as a reverse shell, in a glitch.

297
00:18:28,480 --> 00:18:31,070
Or, you can use it as
a secure chat server,

298
00:18:31,070 --> 00:18:35,030
because this is only between two people or
a couple of people.

299
00:18:35,030 --> 00:18:38,150
You're not actually using
any external servers.

300
00:18:38,150 --> 00:18:42,110
Rather instead, one of you can be
a server and then others connect to him,

301
00:18:42,110 --> 00:18:44,990
then you can chat no problems.

302
00:18:44,990 --> 00:18:51,860
If you wanted to have multiple people,
you would just add in k here,

303
00:18:51,860 --> 00:18:56,010
press enter, and
then you would be able to,

304
00:18:56,010 --> 00:19:01,090
I'm pretty sure,
receive more than one person.

305
00:19:01,090 --> 00:19:03,020
So let's just verify.

306
00:19:03,020 --> 00:19:10,740
You can verify that quickly by
typing nc 192.168.1.101 port 8888.

307
00:19:10,740 --> 00:19:17,500
Connection refused.

308
00:19:17,500 --> 00:19:22,080
Of course it was refused, cat.

309
00:19:22,080 --> 00:19:29,880
Ncat 192.168.1.102 for crying out loud.

310
00:19:29,880 --> 00:19:33,440
One, two, three, four, press enter.

311
00:19:33,440 --> 00:19:35,723
There we go.

312
00:19:35,723 --> 00:19:42,630
And this is not SSL, so --SSL.

313
00:19:42,630 --> 00:19:48,600
There we go, it's communicating, and if I
just go ahead and open up another browser.

314
00:19:48,600 --> 00:19:49,635
Another one of these.

315
00:19:49,635 --> 00:19:51,470
It's not browser but.

316
00:19:52,730 --> 00:19:53,250
There you go.

317
00:19:53,250 --> 00:19:57,790
So you can have two terminals are more
something of a kind to connect.

318
00:19:57,790 --> 00:20:00,830
In any case,
I would like to bid you all farewell.

